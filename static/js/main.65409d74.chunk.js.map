{"version":3,"sources":["Components/Container/Container.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/ContactListItem/ContactListItem.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css"],"names":["Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","console","log","currentTarget","value","formButton","type","pattern","title","required","onChange","ContactList","ContactListItem","item","onDelete","id","onClick","Filter","App","contacts","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","prevState","setItem","stringify","deleteItem","contactId","contact","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","shortid","generate","find","alert","list","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mPAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCMxB,SAASI,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAkCA,OACE,uBAAML,SAZa,SAACM,GACpBA,EAAEC,iBAEFC,QAAQC,IAAIH,EAAEI,cAAcC,OAE5BX,EAASE,EAAME,GAEfD,EAAQ,IACRE,EAAU,KAIoBT,UAAWC,IAAEe,WAA3C,UACE,qCACA,uBACEC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAzCmB,SAACX,GACxBH,EAAQG,EAAEI,cAAcC,QAyCpBA,MAAOT,IAGT,uCACA,uBACEW,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAjDqB,SAACX,GAC1BD,EAAUC,EAAEI,cAAcC,QAiDtBA,MAAOP,IAGT,wBAAQF,KAAK,GAAGW,KAAK,SAArB,4BCrES,SAASK,EAAT,GAAoC,IAAbvB,EAAY,EAAZA,SACpC,OAAO,6BAAKA,ICDC,SAASwB,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SAAUC,EAAM,EAANA,GACxD,OACE,+BACGF,EAAKlB,KADR,IACekB,EAAKhB,OAClB,wBAAQmB,QAAS,kBAAMF,EAASC,IAAhC,uBCJN,IAQeE,EARA,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAOM,EAAV,EAAUA,SAAV,OACb,0DAEE,uBACA,uBAAOJ,KAAK,OAAOF,MAAOA,EAAOM,SAAUA,Q,iBCIhC,SAASQ,IAUtB,MAAgCxB,mBAAS,IAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAA4B1B,mBAAS,IAArC,mBAAO2B,EAAP,KAAeC,EAAf,KAaAC,qBAAU,WACR,IAAMJ,EAAWK,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMT,GAE9BO,GACFN,EAAYM,KAEb,IAUHH,qBAAU,WAIJJ,IAAaC,GAAY,SAACS,GAAD,OAAeA,MAC1CL,aAAaM,QAAQ,WAAYH,KAAKI,UAAUZ,MAEjD,CAACA,IAMJ,IA+BMa,EAAa,SAACC,GAClBb,GAAY,SAACS,GAAD,OACVA,EAAUR,QAAO,SAACa,GAAD,OAAaA,EAAQnB,KAAOkB,SAK3CE,EAhBqB,WAEzB,IAAMC,EAAmBf,EAAOgB,cAEhC,OAAOlB,EAASE,QAAO,SAACa,GAAD,OACrBA,EAAQvC,KAAK0C,cAAcC,SAASF,MAWhBG,GAExB,OACE,eAAC,EAAD,WACE,2CACA,cAAC/C,EAAD,CAAaC,SA3CS,SAACE,EAAME,GAC/BI,QAAQC,IAAIP,GAEZ,IAAMuC,EAAU,CACdnB,GAAIyB,IAAQC,WACZ9C,OACAE,UAKEsB,EAASuB,MAAK,SAACR,GAAD,OAAaA,EAAQvC,OAASA,KAC9CgD,MAAM,GAAD,OAAIhD,EAAJ,6BAELyB,GAAY,SAACS,GAAD,OAAgBK,GAAhB,mBAA4BL,UA+BxC,0CACA,cAAC,EAAD,CAAQzB,MAAOiB,EAAQX,SA5BN,SAACX,GACpBuB,EAAUvB,EAAEI,cAAcC,UA4BxB,cAACO,EAAD,CAAaiC,KAAMT,EAAiBrB,SAAUkB,EAA9C,SACGG,EAAgBU,KAAI,SAAChC,GAAD,OACnB,cAACD,EAAD,CACEC,KAAMA,EAENC,SAAUkB,EACVjB,GAAIF,EAAKE,IAFJF,EAAKE,YCjHtB,IAYe+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvC,EAAD,MAEFwC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,WAAa,mC","file":"static/js/main.65409d74.chunk.js","sourcesContent":["import s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\n// export default class ContactForm extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setName(e.currentTarget.value);\n  };\n  const handleNumberChange = (e) => {\n    setNumber(e.currentTarget.value);\n  };\n\n  // const handleChange = e => {\n  //   const valueOption = e.target.name;\n  //   switch (valueOption) {\n  //     case 'name':\n  //       setName(e.target.value);\n  //       break;\n  //     case 'number':\n  //       setNumber(e.target.value);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(e.currentTarget.value);\n\n    onSubmit(name, number);\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.formButton}>\n      <p>Name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleNameChange}\n        value={name}\n      />\n\n      <p>Number</p>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleNumberChange}\n        value={number}\n      />\n\n      <button name=\"\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export default function ContactList({ children }) {\n  return <ul>{children}</ul>;\n}\n\n// function ContactList({ list }) {\n//   return (\n//     <ul className=\"friend-list\">\n//       {list.map((item) => (\n//         <li key={item.id}>{item.name}</li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default ContactList;\n","export default function ContactListItem({ item, onDelete, id }) {\n  return (\n    <li>\n      {item.name}:{item.number}\n      <button onClick={() => onDelete(id)}>Delete</button>\n    </li>\n  );\n}\n","const Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <br></br>\n    <input type=\"text\" value={value} onChange={onChange}></input>\n  </label>\n);\n\nexport default Filter;\n","import { useState, useEffect } from \"react\";\nimport Container from \"./Components/Container/Container\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport ContactListItem from \"./Components/ContactListItem/ContactListItem\";\nimport Filter from \"./Components/Filter/Filter\";\nimport shortid from \"shortid\";\n\nexport default function App() {\n  // state = {\n  //   contacts: [\n  //     // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //     // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //     // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //     // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //   ],\n  //   filter: \"\",\n  // };\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  // componentDidMount() {\n  //   // console.log('App componentDidMount');\n\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const nextContacts = this.state.contacts;\n  //   const prevContacts = prevState.contacts;\n\n  //   if (nextContacts !== prevContacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n  //   }\n\n  useEffect(() => {\n    // const nextContacts = this.state.contacts;\n    // const prevContacts = prevState.contacts;\n\n    if (contacts !== setContacts((prevState) => prevState)) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }, [contacts]);\n\n  // if (nextContacts.length > prevContacts.length && prevContacts.length !== 0) {\n  //   this.toggleModal();\n  // }\n\n  const formSubmitHandler = (name, number) => {\n    console.log(name);\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    // const { contacts } = this.state;\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      setContacts((prevState) => [contact, ...prevState]);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    // const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteItem = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  // const { filter } = this.state;\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList list={visibleContacts} onDelete={deleteItem}>\n        {visibleContacts.map((item) => (\n          <ContactListItem\n            item={item}\n            key={item.id}\n            onDelete={deleteItem}\n            id={item.id}\n          />\n        ))}\n      </ContactList>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__FQVP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"ContactForm_formButton__1HqP6\"};"],"sourceRoot":""}